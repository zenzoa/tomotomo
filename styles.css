:root {
    --cellsize: 32px;

    --gridgradient: linear-gradient(43deg, #4158D0 0%, #C850C0 46%, #FFCC70 100%);

    --bgcolor: white;
    --bgcolor2: #eee;
    --fgcolor: #333;

    --hintcolor: #888;
    --hintcolor-selected: #666;
    --hintcolor-solved: #ccc;

    --seqlengthbg: #ddd;
    --seqlengthfg: black;

    --buttonswidth: 100%;

    --buttonbg: #e9e9e9;
    --buttonfg: #666;
    --buttonbg-hovered: #d9d9d9;
    --buttonfg-hovered: #000;

    --buttonbg-selected: #666;
    --buttonfg-selected: white;
    --buttonbg-selected-hovered: #333;
    --buttonfg-selected-hovered: white;

    --modalshadowcolor: rgba(64, 64, 64, 0.1);
}

html, body {
    height: 100%;
    padding: 0;
    margin: 0;
}

body {
    font-family: Verdana, sans-serif;
    font-size: 12px;
    color: var(--fgcolor);
    background-color: var(--bgcolor);
    background-image: linear-gradient(var(--bgcolor) 80%, var(--bgcolor2));
}

@media (max-width: 800px), (max-height: 800px) {
    body {
        font-size: 10px;
    }
}

#main {
    text-align: center;
}

.board, .modal, #sequence-length { 
    user-select: none;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
}

.grid {
    display: inline-flex;
    flex-direction: column;
    width: auto;
    border-radius: 20px;
    padding: 10px;
    cursor: pointer;
    position: relative;
    overflow: hidden;
    transform: translateZ(0)
}

.grid::before {
    position: absolute;
    content: '';
    display: block;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background-color: #4158D0;
    background-image: var(--gridgradient);
}

.board-solved .grid::before {
    animation: sk-rotate 5.0s infinite linear;
}

.row {
    display: flex;
    flex-direction: row;
}

.cell {
    width: var(--cellsize);
    height: var(--cellsize);
    position: relative;
}

.cell::after {
    content: '';
    display: block;
    position: absolute;
    top: 0; bottom: 0; left: 0; right: 0;
    transition: border-radius ease-out 100ms, margin ease-out 100ms, opacity ease-out 100ms;
}

.cell-empty::after {
    background: white;
    border-radius: 100%;
    margin: 36%;
    opacity: 0.5;
}

.cell-true::after {
    background: white;
    border-radius: 30%;
    margin: 1px;
}

.cell-false::after {
    background: rgba(0, 0, 0, 0.5);
    border-radius: 30%;
    margin: 5px;
}

.cell-guess-true::after {
    background: white;
    border-radius: 30%;
    margin: 3px;
    opacity: 0.5;
}

.cell-guess-false::after {
    background: rgba(0, 0, 0, 0.5);
    border-radius: 30%;
    margin: 6px;
    opacity: 0.5;
}

.cell-marked::after {
    box-shadow: 0 0 0 0 orange, 0 0 0 0 black;
    z-index: 1;
    animation: cell-marked-shadow 1.5s ease-in-out;
}

@keyframes cell-marked-shadow {
    0%, 100% { box-shadow: 0 0 0 0 orange, 0 0 0 0 black; }
    30%, 70% { box-shadow: 0 0 0 4px orange, 0 0 6px 0 black; }
}

.board-solved .cell-true::after {
    background: white;
    border-radius: 100%;
    margin: 1px;
}

.board-solved .row:nth-child(2n) .cell-true:nth-child(2n)::after {
    animation: cell-bounce 1.0s infinite ease-in-out;
    animation-delay: 0s;
}
.board-solved .row:nth-child(2n) .cell-true:nth-child(2n + 1)::after {
    animation: cell-bounce 0.8s infinite ease-in-out;
    animation-delay: 0.5s;
}
.board-solved .row:nth-child(2n+1) .cell-true:nth-child(2n)::after {
    animation: cell-bounce 0.9s infinite ease-in-out;
    animation-delay: 1.0s;
}
.board-solved .row:nth-child(2n+1) .cell-true:nth-child(2n + 1)::after {
    animation: cell-bounce 0.7s infinite ease-in-out;
    animation-delay: 1.5s;
}

@keyframes cell-bounce {
    0%, 100% { transform: scale(1.0); }
    50% { transform: scale(0.8); }
}

.board-solved .cell-false::after {
    opacity: 0;
}

.board {
    vertical-align: top;
    display: inline-flex;
    flex-direction: column;
    padding: 0 20px 20px;
    border-bottom: 1px solid #ddd;
    border-radius: 10px;
}

.board-top {
    display: inline-flex;
    flex-direction: row;
}

.board-bottom {
    display: inline-flex;
    flex-direction: row;
}

.board-corner {
    flex-grow: 1;
    display:flex;
    flex-direction: row;
    align-items: flex-end;
    justify-content: flex-end;
}

#row-hints {
    display: inline-flex;
    flex-direction: column;
    align-items: flex-end;
    padding: 10px;
}

#row-hints .hint-group {
    display: inline-flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;
    height: var(--cellsize);
}

#row-hints .hint {
    margin: 0 5px;
}

#col-hints {
    display: inline-flex;
    flex-direction: row;
    align-items: flex-end;
    padding: 10px;
}

#col-hints .hint-group {
    display: inline-flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    width: var(--cellsize);
}

#col-hints .hint {
    margin: 5px 0;
}

.hint {
    width: 10px;
    height: 10px;
    text-align: center;
    color: var(--hintcolor);
    transition: color ease-out 200ms, transform ease-in-out 500ms;
}

.hints-selected .hint {
    font-weight: bold;
    transform: scale(1.2);
    color: var(--hintcolor-selected);
}

.hint-solved {
    font-style: italic;
    color: var(--hintcolor-solved);
}

.board-solved .hint {
    opacity: 0;
}

.modal {
    display: flex;
    position: absolute;
    top: 0; bottom: 0; left: 0; right: 0;
    align-items: center;
    justify-content: center;
    background: rgba(64, 64, 64, 0.9);
}

.modal-closed, .modal-closed * {
    display: none;
}

.modal-contents {
    z-index: 1;
    min-width: 50%;
    display: flex;
    flex-direction: column;
    background: var(--bgcolor);
    border-radius: 20px;
    padding: 20px;
    box-shadow: 0 0 50px 0 var(--modalshadowcolor);
    text-align: center;
    position: relative;
}

.modal-contents > span {
    font-size: 150%;
    margin-bottom: 10px;
}

.modal-contents > button {
    margin: 10px 20px;
}

#buttons {
    display: flex;
    flex-direction: row;
    width: var(--buttonswidth);
    margin: 20px auto 0;
    padding: 0 10px;
    box-sizing: border-box;
    text-align: center;
}

.fill {
    flex-grow: 1;
}

button {
    height: 40px;
    padding: 0 20px;
    border: none;
    border-radius: 10px;
    background: var(--buttonbg);
    box-shadow: 0 0 0 0 var(--buttonbg);
    color: var(--buttonfg);
    font-family: inherit;
    text-align: center;
    cursor: pointer;
    font-size: inherit;
    transition: all ease-out 150ms;
    transform: translateZ(0)
}

button:focus, button:hover {
    background: var(--buttonbg-hovered);
    box-shadow: 0 0 0 5px var(--buttonbg-hovered);
    color: var(--buttonfg-focus);
}

.button-selected {
    background: var(--buttonbg-selected);
    box-shadow: 0 0 0 0 var(--buttonbg-selected);
    color: var(--buttonfg-selected);
}

.button-selected:focus, .button-selected:hover {
    background: var(--buttonbg-selected-hovered);
    box-shadow: 0 0 0 5px var(--buttonbg-selected-hovered);
    color: var(--buttonfg-selected);
}

#buttons > button + button {
    margin-left: 5px;
}

#sequence-length:not(:empty) {
    position: absolute;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    width: 36px;
    height: 36px;
    border-radius: 100%;
    background: var(--seqlengthbg);
    box-shadow: 2px 2px 10px 0 rgba(0, 0, 0, 0.1);
    color: var(--seqlengthfg);
}

#spinner-container {
    display: flex;
    position: absolute;
    top: 0; left: 0; right: 0; bottom: 75px;
    align-items: center;
    justify-content: center;
    background: var(--bgcolor);
    border-radius: 20px;
}

#spinner-container.hidden {
    display: none;
}

/* spinner from https://tobiasahlin.com/spinkit/ */
.spinner {
    margin: 100px auto;
    width: 40px;
    height: 40px;
    position: relative;
    text-align: center;
    animation: sk-rotate 2.0s infinite linear;
}

.dot1, .dot2 {
    width: 60%;
    height: 60%;
    display: inline-block;
    position: absolute;
    top: 0;
    background-color: #ccc;
    border-radius: 100%;
    animation: sk-bounce 2.0s infinite ease-in-out;
}

.dot2 {
    top: auto;
    bottom: 0;
    animation-delay: -1.0s;
}

@keyframes sk-rotate {
    100% { transform: rotate(360deg); }
}

@keyframes sk-bounce {
    0%, 100% { transform: scale(0.0); }
    50% { transform: scale(1.0); }
}

#checkmark-container {
    position: absolute;
    top: 0; bottom: 0; left: 0; right: 0;
    display: flex;
    align-items: center;
    justify-content: center;
}

#checkmark-container::before {
    content: '';
    position: absolute;
    margin-top: -30px;
    display: block;
    background: white;
    box-shadow: 0 0 0px 0px rgba(255, 255, 255, 0);
    width: 1px;
    height: 1px;
    border-radius: 100%;
    animation: checkmark-shadow 1s ease-in;
}

.checkmark {
    display: inline-block;
    transform: translateY(-30px) rotate(45deg);
    height: 100px;
    width: 50px;
    border-bottom: 30px solid #78b13f;
    border-right: 30px solid #78b13f;
    opacity: 0;
    animation: checkmark-opacity 1s ease-in;
}

@keyframes checkmark-shadow {
    0%, 100% { box-shadow: 0 0 0 0px white; }
    30%, 70% { box-shadow: 0 0 0 100px white; }
}

@keyframes checkmark-opacity {
    0%, 100% { opacity: 0; }
    30%, 70% { opacity: 1; }
}